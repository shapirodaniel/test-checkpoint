name: grade checkpoint
on:
  push:
    branches:
      - 'solution'
jobs:
  build:
    runs-on: 'ubuntu-latest'
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: install dependencies
        run: npm i

      - name: jest output in json format
        id: test_json
        # https://www.npmjs.com/package/jest-cli/v/0.10.0#use---json-for-ci-integrations
        run: |
          json_compressed=$(npm run test:ci | sed 's/^[^{]*//g' | sed 's/[^}]*$//g');
          json_compressed=${json_compressed//$'\n'/};
          echo ::set-output name=TEST_JSON::$json_compressed;

      - name: grade tests
        id: grade_tests
        run: |
          num_passed_tests=$(jq '.numPassedTests');
          num_total_tests=$(jq '.numTotalTests');
          echo ::set-output name=GRADE::$(echo "scale=3; $num_passed_tests / $num_total_tests" | bc);
        env:
          TEST_JSON: ${{ steps.test_json.outputs.TEST_JSON }}

      - name: send_grade
        # at grade endpoint on remote server validate github.token
        run: |
          COMMIT_DATE_TIME=$(git show --no-patch --no-notes --pretty='%cd' ${{ github.sha }});
          curl -X POST https://univ-grade-system-fsa.herokuapp.com/api/grade \
            -H 'Authorization:Bearer ${{ github.token }}' \
            -H 'Content-Type:application/json' \
            -d '{"status":"${{ job.status }}","github_name":"${{ github.actor }}","repository_url":"${{ github.repositoryUrl }}","submitted_at":"$COMMIT_DATE_TIME","grade":"${{ env.GRADE }}"}'
        env:
          GRADE: ${{ steps.grade_tests.outputs.GRADE }}
